<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit60be3484c030422bc8298de2d00703a1
=======
class ComposerAutoloaderInite3ced6b3367f8d1e3edb7cf9f8fbbbde
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit60be3484c030422bc8298de2d00703a1', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit60be3484c030422bc8298de2d00703a1', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInite3ced6b3367f8d1e3edb7cf9f8fbbbde', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInite3ced6b3367f8d1e3edb7cf9f8fbbbde', 'loadClassLoader'));
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit60be3484c030422bc8298de2d00703a1::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInite3ced6b3367f8d1e3edb7cf9f8fbbbde::getInitializer($loader));
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInit60be3484c030422bc8298de2d00703a1::$files;
=======
            $includeFiles = Composer\Autoload\ComposerStaticInite3ced6b3367f8d1e3edb7cf9f8fbbbde::$files;
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequire60be3484c030422bc8298de2d00703a1($fileIdentifier, $file);
=======
            composerRequiree3ced6b3367f8d1e3edb7cf9f8fbbbde($fileIdentifier, $file);
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire60be3484c030422bc8298de2d00703a1($fileIdentifier, $file)
=======
function composerRequiree3ced6b3367f8d1e3edb7cf9f8fbbbde($fileIdentifier, $file)
>>>>>>> 01f5fcc47ac63bb33d873be9bb751e3a21e37f61
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
